#!/bin/bash

set -eCu

SHORTOPTS="hlt:"
LONGOPTS="help,list,theme:"

CONFIGDIR="$XDG_CONFIG_HOME/xcolor"
CACHEDIR="$XDG_CACHE_HOME/xcolor"

THEME=""
THEMEPATH=""
THEMESDIR="$CONFIGDIR/themes"

XRESPATH="$HOME/.Xresources"
XRESINCL="#include \"$CONFIGDIR/x.colors\""

check_config_dir() {
    if ! [ -d $CONFIGDIR ]; then
        mkdir $CONFIGDIR
        mkdir $THEMESDIR
    fi
}

check_cache_dir() {
    if ! [ -d $CACHEDIR ]; then
        mkdir $CACHEDIR
    fi
    if [ -f $CACHEDIR/xcolor.sequence ]; then
        rm -f $CACHEDIR/xcolor.sequence
    fi
}

usage() {
    echo "Usage: ./xcolor-load [options]"
    echo "       -t, --theme:   select theme"
    echo "       -l, --list:    list themes"
    echo "       -h, --help:    show usage"
    exit 0
}

list_themes() {
    if ! [ "$(ls -A $THEMESDIR)" ]; then
        echo "no themes installed!"
    else
        for theme in $THEMESDIR/*.colors; do
            echo "$theme" | sed 's@.*/@@' | sed 's@\..*@@'
        done
    fi
    exit 0
}

parse_args() {
    # Check getopt(1) version
    ! getopt --test > /dev/null
    if [ "${PIPESTATUS[0]}" -ne "4" ]; then
        echo "error: incompatible getopt version -- please install enhanced getopt"
        exit 2
    fi

    # Assemble options
    ! OPTS=$(getopt --options $SHORTOPTS --long $LONGOPTS --name "$0" -- "$@")
    if [ "${PIPESTATUS[0]}" -ne "0" ]; then
        exit 2
    fi
    eval "set -- $OPTS"

    if [ "$1" == "--" ]; then
        usage
    fi

    # Parse loop
    while true; do
        case "$1" in
            -h | --help)
                usage
                ;;
            -l | --list)
                list_themes
                ;;
            -t | --theme)
                THEME="$2"
                shift 2
                ;;
            --)
                shift
                break
                ;;
            *)
                echo "*"
                exit 2
                ;;
         esac
    done

    THEMEPATH="$THEMESDIR/$THEME.colors"

    # Post processing
    if     [ -z "$THEME" ]; then
        echo "error: please select theme"
        exit 1
    elif ! [ -f "$THEMEPATH" ]; then
        echo "error: $THEMEPATH does not exist"
        exit 1
    fi

}

read_theme() {
    while read -r LINE; do
        set -- $LINE
        printf -v $2 "$3"
    done < $THEMEPATH
}

make_esc_seq() {
    echo -e "\
]4;0;$COLOR0\\\
]4;1;$COLOR1\\\
]4;2;$COLOR2\\\
]4;3;$COLOR3\\\
]4;4;$COLOR4\\\
]4;5;$COLOR5\\\
]4;6;$COLOR6\\\
]4;7;$COLOR7\\\
]4;8;$COLOR8\\\
]4;9;$COLOR9\\\
]4;10;$COLOR10\\\
]4;11;$COLOR11\\\
]4;12;$COLOR12\\\
]4;13;$COLOR13\\\
]4;14;$COLOR14\\\
]4;15;$COLOR15\\\
]10;$FOREGROUND\\\
]11;$BACKGROUND\\\
]12;$CURSOR\\\
]4;232;$BACKGROUND\\\
]4;256;$BACKGROUND\\\
]708;$BACKGROUND\\" > $CACHEDIR/xcolor.sequence
}

update_tty() {
    for tty in /dev/pts/[0-9]*; do
        if [ -w $tty ]; then
            cat $CACHEDIR/xcolor.sequence | tr -d "\n" > $tty &
        fi
    done
}

check_xres() {
    # Create .Xresources if not already there
    if ! [ -f $XRESPATH ]; then
        echo "$XRESINCL" > $XRESPATH
        # TODO: Add .*colors setup to xres
    else
        # Add x.colors include path if not already there
        ! grep "$XRESINCL" $XRESPATH > /dev/null
        if [ "${PIPESTATUS[0]}" -ne "0" ]; then
            # TODO: Check return value of tmp file creation
            echo "$XRESINCL" | cat - $XRESPATH > /tmp/xres-tmp
            mv /tmp/xres-tmp $XRESPATH
        fi
    fi
}

copy_theme() {
    rm -f $CONFIGDIR/x.colors
    printf "! Current xcolor theme: $THEME\n\n" > $CONFIGDIR/x.colors
    cat $THEMEPATH >> $CONFIGDIR/x.colors
}

rel_xres() {
    xrdb $XRESPATH > /dev/null
}

rel_i3() {
    i3-msg reload  > /dev/null
}

rel_polybar() {
    pkill -USR1 polybar > /dev/null
}

rel_if_alive() {
    ! pgrep $@ > /dev/null
    if [ "${PIPESTATUS[0]}" -eq "0" ]; then
        rel_$@
    fi
}

check_config_dir
parse_args "$@"

# Mandatory reloads
check_xres
copy_theme
rel_xres

# If PID exists, reload
rel_if_alive "i3"
rel_if_alive "polybar"

read_theme
check_cache_dir
make_esc_seq
update_tty
